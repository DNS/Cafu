import os, sys

Import('env')


envOpenALSoft = env.Clone()

AlcObjs=Split("Alc/ALc.c Alc/ALu.c Alc/alcConfig.c Alc/alcEcho.c Alc/alcReverb.c Alc/alcRing.c Alc/alcThread.c Alc/alsa.c Alc/bs2b.c Alc/oss.c Alc/wave.c");


envOpenALSoft.Append(CPPDEFINES=[('_GNU_SOURCE', '1'), '_REENTRANT', 'AL_BUILD_LIBRARY'])    # 'HAVE_GCC_VISIBILITY'
envOpenALSoft.Append(CCFLAGS=['-fno-strict-aliasing'])    # '-fvisibility=hidden'

# This is a work-around for https://gcc.gnu.org/bugzilla/show_bug.cgi?id=82714
envOpenALSoft.Replace(CCFLAGS=[flag.replace("-O3", "-O2") for flag in envOpenALSoft["CCFLAGS"]])

if sys.platform.startswith("linux"):
    # This library will be linked to a .so, thus we have to compile with -fpic.
    envOpenALSoft.Append(CCFLAGS=["-fpic"])


envOpenALSoft.StaticLibrary("openal", Glob("OpenAL32/*.c") + AlcObjs,
    CPPPATH=[".", "include", "OpenAL32/Include"]);
