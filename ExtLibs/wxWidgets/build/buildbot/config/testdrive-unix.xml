<?xml version="1.0" encoding="utf-8"?>

<!--
    Name:       testdrive-unix.xml
    Purpose:    Buildbot configuration for the unix HP Testdrive machines.
    Author:     Mike Wetherell
    RCS-ID:     $Id: testdrive-unix.xml 53886 2008-05-31 23:41:27Z VZ $
    Copyright:  (c) 2007 Mike Wetherell
    Licence:    wxWidgets licence
-->

<bot xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
     xmlns:xi="http://www.w3.org/2001/XInclude">

<xi:include href="include/testdrive-unix.xml"/>

<!--
    Notes:

    The list of available machines is here:
        http://www.testdrive.hp.com/current.shtml
    This file is for unix hosts only, for Windows see testdrive-win.xml.

    <sandbox> specifies the remote machine that will run the job, or it can
    be 'debug' in which case the sandbox will just echo the commands. If
    omitted defaults to the same value as the previous build.

    An extra build step <setup> can be used after <checkout> to set up ccache
    and cppunit. Cppunit generally needs to be compiled by the same compiler
    that will be used for wxWidgets, add configure options using the
    'cppunit-options' attribute when needed, e.g.:
        <setup cppunit-options="CC=cc CXX=CC"/>

    Cross compilers available on the Linux x86 machines:
        powerpc-apple-darwin8   Xcode 2.2.1 compiler and SDK
        i686-apple-darwin8      Xcode 2.2.1 compiler and SDK
        i386-mingw32            cppunit installed under $HOME/opt/mingw345
        i686-pc-cygwin          cppunit, x11, motif and gtk

    Please limit the number of quick builds to one unix, one Windows and one
    Mac per branch. And please don't load up all the cpus of a remote machine
    at once with make -j.
-->

<!--
    Unix Quick Builds
-->

<build>
    <name>Linux IA64 wxGTK Trunk</name>
    <sandbox>td187.testdrive.hp.com</sandbox>
    <builddir>td_gtk</builddir>
    <scheduler>trunk_quick</scheduler>

    <steps>
        <checkout/>
        <setup/>
        <configure/>
        <compile-all/>
        <run-tests/>
    </steps>
</build>

<build>
    <name>Linux IA64 wxGTK Stable</name>
    <sandbox>td187.testdrive.hp.com</sandbox>
    <builddir>td_gtk_stable</builddir>
    <scheduler>stable_quick</scheduler>

    <steps>
        <checkout branch="{$STABLE_BRANCH}"/>
        <setup/>
        <configure/>
        <compile-all/>
        <run-tests/>
    </steps>
</build>

<!--
    Mac Quick Builds
-->

<build>
    <name>OSX 10.4 PowerPC wxMac Trunk</name>
    <sandbox>td153.testdrive.hp.com</sandbox>
    <builddir>td_mac</builddir>
    <scheduler>trunk_quick</scheduler>

    <steps>
        <checkout/>
        <setup cppunit-options="--host=powerpc-apple-darwin8"/>
        <!--
            The compiler used suffers from a bug in its visibility support
            and doesn't find some virtual inline functions during linking if it
            is used, so disable it.
         -->
        <configure options="--host=powerpc-apple-darwin8 --disable-visibility"/>
        <compile-all/>
    </steps>
</build>

<build>
    <name>OSX 10.4 Intel wxMac Stable</name>
    <sandbox>td153.testdrive.hp.com</sandbox>
    <builddir>td_mac_stable</builddir>
    <scheduler>stable_quick</scheduler>

    <steps>
        <checkout branch="{$STABLE_BRANCH}"/>
        <setup cppunit-options="--host=i686-apple-darwin8"/>
        <configure options="--host=i686-apple-darwin8"/>
        <compile-all/>
    </steps>
</build>

<!--
    Windows Quick Builds
-->

<build>
    <name>MinGW32 wxMSW Trunk</name>
    <sandbox>td166.testdrive.hp.com</sandbox>
    <builddir>td_msw</builddir>
    <scheduler>trunk_quick</scheduler>

    <steps>
        <checkout/>
        <configure options="--host=i386-mingw32 --with-cppunit-prefix=$HOME/opt/mingw345"/>
        <compile-all/>
    </steps>
</build>

<build>
    <name>MinGW32 wxMSW Stable</name>
    <sandbox>td166.testdrive.hp.com</sandbox>
    <builddir>td_msw_stable</builddir>
    <scheduler>stable_quick</scheduler>

    <steps>
        <checkout branch="{$STABLE_BRANCH}"/>
        <configure options="--host=i386-mingw32 --with-cppunit-prefix=$HOME/opt/mingw345"/>
        <compile-all/>
    </steps>
</build>

<!--
    Daily builds
-->

<build>
    <name>FreeBSD x86 wxX11 Trunk</name>
    <sandbox>td152.testdrive.hp.com</sandbox>
    <builddir>td_freebsd</builddir>
    <scheduler>daily_0600</scheduler>

    <steps>
        <checkout/>
        <setup/>
        <configure options="--with-x11 --disable-unicode"/>
        <compile-all/>
        <run-tests/>
    </steps>
</build>

<build>
    <name>FreeBSD x86 wxX11 Stable</name>
    <sandbox>td152.testdrive.hp.com</sandbox>
    <builddir>td_freebsd_stable</builddir>
    <scheduler/>

    <steps>
        <checkout branch="{$STABLE_BRANCH}"/>
        <setup/>
        <configure options="--with-x11"/>
        <compile-all/>
        <run-tests/>
    </steps>
</build>

<build>
    <name>HP-UX 11i PA-RISC gcc wxMotif Head Tarball</name>
    <sandbox>td192.testdrive.hp.com</sandbox>
    <builddir>td_hpux_pa</builddir>
    <scheduler>daily_0800</scheduler>

    <steps>
        <fetch branch="Daily_HEAD/wxMotif.tar.gz"/>
        <setup/>
        <configure/>
        <compile-all/>
        <run-tests/>
    </steps>
</build>

<build>
    <name>HP-UX 11i PA-RISC gcc wxMotif Stable</name>
    <sandbox>td192.testdrive.hp.com</sandbox>
    <builddir>td_hpux_pa_stable</builddir>
    <scheduler>daily_0600</scheduler>

    <steps>
        <checkout branch="{$STABLE_BRANCH}"/>
        <setup/>
        <configure/>
        <compile-all/>
        <run-tests/>
    </steps>
</build>

<!--
    Cygwin builds

    x86 linux cross compiler with sysroot $HOME/cygwin containing cppunit
    X11, motif and gtk+-2. For locations see cygwin-opts/cygwin-x-opts
    below.
-->

<!--  for wxBase or wxMSW -->
<xsl:variable name="cygwin-opts">
    --host=i686-pc-cygwin
    --with-cppunit-prefix=$HOME/cygwin
</xsl:variable>

<!-- for wxX11, wxMotif, wxGTK -->
<xsl:variable name="cygwin-x-opts">
    <xsl:value-of select="$cygwin-opts"/>
    --x-includes=$HOME/cygwin/usr/X11R6/include
    --x-libraries=$HOME/cygwin/usr/X11R6/lib
    PKG_CONFIG_PATH=$HOME/opt/cygwin/pkgconfig
</xsl:variable>

<build>
    <name>Cygwin wxMSW Trunk</name>
    <builddir>td_cygwin_msw</builddir>
    <sandbox>td153.testdrive.hp.com</sandbox>
    <scheduler>monday_0600</scheduler>

    <steps>
        <checkout/>
        <configure options="{$cygwin-opts}"/>
        <compile-all/>
    </steps>
</build>

<build>
    <name>Cygwin wxMSW Stable</name>
    <builddir>td_cygwin_msw_stable</builddir>
    <scheduler/>

    <steps>
        <checkout branch="{$STABLE_BRANCH}"/>
        <configure options="{$cygwin-opts}"/>
        <compile-all/>
    </steps>
</build>

<build>
    <name>Cygwin wxGTK Trunk</name>
    <builddir>td_cygwin_gtk</builddir>
    <scheduler/>

    <steps>
        <checkout/>
        <configure options="--with-gtk {$cygwin-x-opts}"/>
        <compile-all/>
    </steps>
</build>

<build>
    <name>Cygwin wxGTK Stable</name>
    <builddir>td_cygwin_gtk_stable</builddir>
    <scheduler/>

    <steps>
        <checkout branch="{$STABLE_BRANCH}"/>
        <configure options="--with-gtk {$cygwin-x-opts}"/>
        <compile-all/>
    </steps>
</build>

<!--
<build>
    <name>Cygwin wxX11 Trunk</name>
    <builddir>td_cygwin_x11</builddir>
    <scheduler/>

    <steps>
        <checkout/>
        <configure options="-
-with-x11 {$cygwin-x-opts}"/>
        <compile-all/>
    </steps>
</build>

<build>
    <name>Cygwin wxX11 Stable</name>
    <builddir>td_cygwin_x11_stable</builddir>
    <scheduler/>

    <steps>
        <checkout branch="{$STABLE_BRANCH}"/>
        <configure options="-
-with-x11 {$cygwin-x-opts}"/>
        <compile-all/>
    </steps>
</build>

<build>
    <name>Cygwin wxMotif Trunk</name>
    <builddir>td_cygwin_motif</builddir>
    <scheduler/>

    <steps>
        <checkout/>
        <configure options="-
-with-motif {$cygwin-x-opts}"/>
        <compile-all/>
    </steps>
</build>

<build>
    <name>Cygwin wxMotif Stable</name>
    <builddir>td_cygwin_motif_stable</builddir>
    <scheduler/>

    <steps>
        <checkout branch="{$STABLE_BRANCH}"/>
        <configure options="-
-with-motif {$cygwin-x-opts}"/>
        <compile-all/>
    </steps>
</build>

<build>
    <name>Cygwin wxBase Trunk</name>
    <builddir>td_cygwin_base</builddir>
    <scheduler/>

    <steps>
        <checkout/>
        <configure options="-
-without-gui {$cygwin-opts}"/>
        <compile-all/>
    </steps>
</build>

<build>
    <name>Cygwin wxBase Stable</name>
    <builddir>td_cygwin_base_stable</builddir>
    <scheduler/>

    <steps>
        <checkout branch="{$STABLE_BRANCH}"/>
        <configure options="-
-without-gui {$cygwin-opts}"/>
        <compile-all/>
    </steps>
</build>

-->

<!--
    Cygwin -mno-cygwin builds
-->

<xsl:variable name="nocygwin-opts">
    --host=i686-pc-cygwin
    --with-cppunit-prefix=$HOME/opt/nocygwin
    CC='i686-pc-cygwin-gcc -mno-cygwin'
    CXX='i686-pc-cygwin-g++ -mno-cygwin'
</xsl:variable>

<build>
    <name>Cygwin no-cygwin wxMSW Trunk</name>
    <builddir>td_nocygwin</builddir>
    <sandbox>td166.testdrive.hp.com</sandbox>
    <scheduler>monday_0600</scheduler>

    <steps>
        <checkout/>
        <configure options="{$nocygwin-opts}"/>
        <compile-all/>
    </steps>
</build>

<build>
    <name>Cygwin no-cygwin wxMSW Stable</name>
    <builddir>td_nocygwin_stable</builddir>
    <scheduler/>

    <steps>
        <checkout branch="{$STABLE_BRANCH}"/>
        <configure options="{$nocygwin-opts}"/>
        <compile-all/>
    </steps>
</build>

<!--
<build>
    <name>Cygwin no-cygwin wxBase Trunk</name>
    <builddir>td_nocygwin_base</builddir>
    <scheduler/>

    <steps>
        <checkout/>
        <configure options="-
-without-gui {$nocygwin-opts}"/>
        <compile-all/>
    </steps>
</build>

<build>
    <name>Cygwin no-cygwin wxBase Stable</name>
    <builddir>td_nocygwin_base_stable</builddir>
    <scheduler/>

    <steps>
        <checkout branch="{$STABLE_BRANCH}"/>
        <configure options="-
-without-gui {$nocygwin-opts}"/>
        <compile-all/>
    </steps>
</build>
-->

</bot>
