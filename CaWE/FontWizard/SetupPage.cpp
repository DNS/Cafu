/*
=================================================================================
This file is part of Cafu, the open-source game engine and graphics engine
for multiplayer, cross-platform, real-time 3D action.
Copyright (C) 2002-2012 Carsten Fuchs Software.

Cafu is free software: you can redistribute it and/or modify it under the terms
of the GNU General Public License as published by the Free Software Foundation,
either version 3 of the License, or (at your option) any later version.

Cafu is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Cafu. If not, see <http://www.gnu.org/licenses/>.

For support and more information about Cafu, visit us at <http://www.cafu.de>.
=================================================================================
*/

#include "SetupPage.hpp"

#include "FontWizard.hpp"

#include "wx/filename.h"


BEGIN_EVENT_TABLE(SetupPageT, wxWizardPageSimple)
    EVT_WIZARD_PAGE_CHANGING(wxID_ANY, SetupPageT::OnWizardPageChanging)
END_EVENT_TABLE()


SetupPageT::SetupPageT(FontWizardT* Parent)
    : wxWizardPageSimple(Parent),
      m_Parent(Parent)
{
    // Note: The following code was generated by wxFormBuilder and copied here manually because wxFormbuilder
    // doesn't support wxWizardPage as base class.

	wxBoxSizer* bSizer2;
	bSizer2 = new wxBoxSizer( wxVERTICAL );

	wxStaticText* m_staticText2;
	m_staticText2 = new wxStaticText( this, wxID_ANY, wxT("Select a font to convert into a Cafu font:"), wxDefaultPosition, wxDefaultSize, 0 );
	m_staticText2->Wrap( -1 );
	bSizer2->Add( m_staticText2, 0, wxALL|wxEXPAND, 5 );

	wxBoxSizer* bSizer3;
	bSizer3 = new wxBoxSizer( wxHORIZONTAL );

	m_FontFile = new wxTextCtrl( this, wxID_ANY, wxEmptyString, wxDefaultPosition, wxDefaultSize, 0 );
	bSizer3->Add( m_FontFile, 1, wxALL|wxEXPAND, 5 );

	m_FileButton = new wxButton( this, wxID_ANY, wxT("..."), wxDefaultPosition, wxSize(24, -1), 0 );
	m_FileButton->SetDefault();
	bSizer3->Add( m_FileButton, 0, wxALL, 5 );

	bSizer2->Add( bSizer3, 0, wxEXPAND, 5 );


	bSizer2->Add( 0, 10, 0, wxEXPAND, 5 );

	wxBoxSizer* bSizer4;
	bSizer4 = new wxBoxSizer( wxVERTICAL );

	m_DebugCheckBox = new wxCheckBox( this, wxID_ANY, wxT(" Create debug font images"), wxDefaultPosition, wxDefaultSize, 0 );

	bSizer4->Add( m_DebugCheckBox, 0, wxALL|wxEXPAND, 5 );

	bSizer2->Add( bSizer4, 1, wxEXPAND, 5 );

	this->SetSizer( bSizer2 );
	this->Layout();

	// Connect Events
	m_FileButton->Connect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( SetupPageT::OnChooseFile ), NULL, this );

    // Hide debug check box in release builds.
#ifndef DEBUG
	m_DebugCheckBox->Show(false);
#endif
}


SetupPageT::~SetupPageT()
{
    // Disconnect Events
	m_FileButton->Disconnect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( SetupPageT::OnChooseFile ), NULL, this );
}


void SetupPageT::OnChooseFile(wxCommandEvent& CE)
{
    // Note: Filetypes except All files (*.*) as default file type pose problems with windows vista (and probably other windows versions too)
    // because the system Font directory is not visible if a specific file type is selected. This confuses the user since he most certainly wants
    // to pick a font from the font directory. The problem is not wxWidgets specific and can be reproduced in other applications that use the
    // windows file picker dialog.
    wxString FontTypes="All files (*.*)|*.*|TrueType Font (*.ttf)|*.ttf|OpenType Font (*.otf;*.ttf)|*.otf;*.ttf|PCF Font (*.pcf)|*.pcf|BDF Font (*.bdf)|*.bdf|Windows Font (*.fnt)|*.fnt";

    wxString FileNameStr=wxFileSelector("Please select a file", "", "", "", FontTypes, wxFD_OPEN | wxFD_FILE_MUST_EXIST);

    if (FileNameStr=="") return;

    wxFileName FileName(FileNameStr);

    m_FontFile->SetValue(FileName.GetFullPath());

    m_Parent->DefaultFontName=FileName.GetName();
}


void SetupPageT::OnWizardPageChanging(wxWizardEvent& WE)
{
    if (!WE.GetDirection()) return; // Always allow to move back.

    wxBusyCursor Wait;

    // Only continue if the choosen font file exists.
    if (!wxFileExists(m_FontFile->GetValue()))
    {
        wxMessageBox("Error: The font file you have choosen does not exist.", "File not found", wxICON_WARNING | wxOK, this);

        WE.Veto();

        return;
    }

    // Generate font using current data.
    if (!m_Parent->GenerateFont(m_FontFile->GetValue(), m_DebugCheckBox->IsChecked() ? true : false))
    {
        WE.Veto();

        return;
    }
}
