/*
Cafu Engine, http://www.cafu.de/
Copyright (c) Carsten Fuchs and other contributors.
This project is licensed under the terms of the MIT license.
*/

#include "LastPage.hpp"

#include "FontWizard.hpp"


BEGIN_EVENT_TABLE(LastPageT, wxWizardPageSimple)
    EVT_WIZARD_PAGE_CHANGED(wxID_ANY, LastPageT::OnWizardPageChanged)
    EVT_WIZARD_PAGE_CHANGING(wxID_ANY, LastPageT::OnWizardPageChanging)
END_EVENT_TABLE()


LastPageT::LastPageT(FontWizardT* Parent)
    : wxWizardPageSimple(Parent),
      m_Parent(Parent)
{
    // Note: The following code was generated by wxFormBuilder and copied here manually because wxFormbuilder
    // doesn't support wxWizardPage as base class.

	wxBoxSizer* bSizer12;
	bSizer12 = new wxBoxSizer( wxVERTICAL );

	wxStaticText* m_staticText12;
	m_staticText12 = new wxStaticText( this, wxID_ANY, wxT("The font has been successfully created."), wxDefaultPosition, wxDefaultSize, 0 );
	m_staticText12->Wrap( -1 );
	bSizer12->Add( m_staticText12, 0, wxALL, 5 );


	bSizer12->Add( 0, 15, 0, 0, 5 );

	wxBoxSizer* bSizer13;
	bSizer13 = new wxBoxSizer( wxVERTICAL );

	wxStaticText* m_staticText13;
	m_staticText13 = new wxStaticText( this, wxID_ANY, wxT("To use the font in the GUI editor specifiy"), wxDefaultPosition, wxDefaultSize, 0 );
	m_staticText13->Wrap( -1 );
	bSizer13->Add( m_staticText13, 0, wxALL, 5 );

	m_FontName = new wxStaticText( this, wxID_ANY, wxT("***FontName***"), wxDefaultPosition, wxDefaultSize, wxALIGN_CENTRE );
	m_FontName->Wrap( -1 );
	m_FontName->SetFont( wxFont( 10, 75, 90, 92, false, wxEmptyString ) );

	bSizer13->Add( m_FontName, 0, wxALL|wxALIGN_CENTER_HORIZONTAL, 5 );

	wxStaticText* m_staticText15;
	m_staticText15 = new wxStaticText( this, wxID_ANY, wxT("as font name for a GUI element."), wxDefaultPosition, wxDefaultSize, 0 );
	m_staticText15->Wrap( -1 );
	bSizer13->Add( m_staticText15, 0, wxALL, 5 );

	bSizer12->Add( bSizer13, 1, wxEXPAND, 5 );

	this->SetSizer( bSizer12 );
	this->Layout();
}


void LastPageT::OnWizardPageChanged(wxWizardEvent& WE)
{
    m_FontName->SetLabel("Fonts/"+m_Parent->FontName);

    wxWindow* CancelButton=FindWindowById(wxID_CANCEL, m_Parent);
    wxASSERT(CancelButton!=NULL);
    CancelButton->Enable(false);

    wxWindow* BackButton=FindWindowById(wxID_BACKWARD, m_Parent);
    wxASSERT(BackButton!=NULL);
    BackButton->Enable(false);
}


void LastPageT::OnWizardPageChanging(wxWizardEvent& WE)
{
    // Going back from this page is impossible.
    if (!WE.GetDirection())
    {
        wxASSERT(false); // Should never happen since button is inactive.
        WE.Veto();
        return;
    }
}
