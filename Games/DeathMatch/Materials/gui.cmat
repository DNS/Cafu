// Default material for borders and backgrounds that is used if nothing else is specified with a GUI window.
// This material will be used with the "A_Solid" shader.
Gui/Default
{
    useMeshColors
    blendFunc src_alpha one_minus_src_alpha

    // We need "ambientMask d" in order to prevent z-fighting with world (entity) GUIs.
    // The font materials have this keyword either, and any material that is supposed
    // to be used as a window background will most likely need it, too.
    // (I don't use it with the crosshairs below, but would if they were used on entity GUIs.)
    ambientMask d

    meta_editorImage noEditor
}


Gui/Cursors/Pointer
{
    diffusemap GUIs/pointer.png, noCompression, wrapS clampToEdge, wrapT clampToEdge, noScaleDown
    useMeshColors
    blendFunc src_alpha one_minus_src_alpha
    meta_editorImage noEditor
}


Gui/CrossHair1
{
    diffusemap Textures/Sprites/crosshair1.tga

    // With this we can use e.g.   self:set("backColor", 1.0, 1.0, 0.0, 1.0);   in the Gui scripts to tint the crosshair.
    // ARGH!! Unfortunately, it isn't implemented in most shaders yet, so it currently doesn't work.
    // See http://www.cafu.de/wiki/doku.php?id=matsys:cmat_manual:keywordreference for details.
    // Work-around: Tint the crosshair here, in the cmat script, using red, green, blue, etc.
    //
    // useMeshColors
    red 0.8

    blendFunc src_alpha one_minus_src_alpha

    meta_editorImage noEditor
}


Gui/CrossHair2
{
    diffusemap Textures/Sprites/crosshair2.tga

    // With this we can use e.g.   self:set("backColor", 1.0, 1.0, 0.0, 1.0);   in the Gui scripts to tint the crosshair.
    // ARGH!! Unfortunately, it isn't implemented in most shaders yet, so it currently doesn't work.
    // See http://www.cafu.de/wiki/doku.php?id=matsys:cmat_manual:keywordreference for details.
    // Work-around: Tint the crosshair here, in the cmat script, using red, green, blue, etc.
    //
    // useMeshColors
    red   0.8
    green 0.8

    blendFunc src_alpha one_minus_src_alpha

    meta_editorImage noEditor
}


// An invisible material that does nothing but write depth (z-buffer) values.
// This is sometimes useful as the last window of a GUI that covers the entire 640*480 screen,
// namely whenever there is a chance that e.g. world decals (like blood, dirt, etc.) "behind"
// the GUI entity get drawn only *after* the GUI entity. Then the decal would be wrongly visible
// on the GUI, which can be prevented by employing this material.
// This material will be used with the "A_Solid" shader.
Gui/LayDepth
{
    useMeshColors
    blendFunc src_alpha one_minus_src_alpha
    depthOffset 1.0     // Push it a bit "back", so that the mouse cursors work without trouble.

    // Intentionally no   ambientMask d   here, as we *want* the material to also write the depth component.
    // Note that the GUI window that uses this material should set the background colors alpha value to zero.
    // Example (excerpt from a .cgui GUI script):
    //
    //     function LayDepthBuffer:OnInit()
    //         self:set("rect", 0, 0, 640, 480);
    //         self:set("backMaterial", "Gui/LayDepth");
    //         self:set("backColor", 1, 1, 1, 0);
    //     end

    meta_editorImage noEditor
}


Gui/Background1
{
    diffusemap GUIs/TechDemo/Backgnd1_256.png, noCompression

    // We need "ambientMask d" in order to prevent z-fighting with world (entity) GUIs.
    // The font materials have this keyword either, and any material that is supposed
    // to be used as a window background will most likely need it, too.
    ambientMask d

    meta_editorImage noEditor
}


Gui/SmallLogo
{
    diffusemap GUIs/TechDemo/SmallLogo.png, noCompression

    blendFunc one one

    // We need "ambientMask d" in order to prevent z-fighting with world (entity) GUIs.
    // The font materials have this keyword either, and any material that is supposed
    // to be used as a window background will most likely need it, too.
    ambientMask d

    meta_editorImage noEditor
}


Gui/MainMenu/Background1
{
    diffusemap GUIs/MainMenu/Background1_512.png, noCompression, wrapS clampToEdge, wrapT clampToEdge

    // Although this material is only used in the 2D "Main Menu", we need "ambientMask d" here so
    // that the depth-buffer is left alone and the ModelWindowTs later find it undisturbed when
    // renderig the model previews.
    ambientMask d

    meta_editorImage noEditor
}





Games/DeathMatch/Worlds/AEonsCanyonTower.jpg
{
    diffusemap Worlds/AEonsCanyonTower.jpg, wrapS clampToEdge, wrapT clampToEdge

    meta_editorImage noEditor
}


Games/DeathMatch/Worlds/AEonsCube.jpg
{
    diffusemap Worlds/AEonsCube.jpg, wrapS clampToEdge, wrapT clampToEdge

    meta_editorImage noEditor
}


Games/DeathMatch/Worlds/BPRockB.jpg
{
    diffusemap Worlds/BPRockB.jpg, wrapS clampToEdge, wrapT clampToEdge

    meta_editorImage noEditor
}


Games/DeathMatch/Worlds/BPWxBeta.jpg
{
    diffusemap Worlds/BPWxBeta.jpg, wrapS clampToEdge, wrapT clampToEdge

    meta_editorImage noEditor
}


Games/DeathMatch/Worlds/Gotham.jpg
{
    diffusemap Worlds/Gotham.jpg, wrapS clampToEdge, wrapT clampToEdge

    meta_editorImage noEditor
}


Games/DeathMatch/Worlds/JrBaseHQ.jpg
{
    diffusemap Worlds/JrBaseHQ.jpg, wrapS clampToEdge, wrapT clampToEdge

    meta_editorImage noEditor
}


Games/DeathMatch/Worlds/Kidney.jpg
{
    diffusemap Worlds/Kidney.jpg, wrapS clampToEdge, wrapT clampToEdge

    meta_editorImage noEditor
}


Games/DeathMatch/Worlds/ReNoEcho.jpg
{
    diffusemap Worlds/ReNoEcho.jpg, wrapS clampToEdge, wrapT clampToEdge

    meta_editorImage noEditor
}


Games/DeathMatch/Worlds/ReNoElixir.jpg
{
    diffusemap Worlds/ReNoElixir.jpg, wrapS clampToEdge, wrapT clampToEdge

    meta_editorImage noEditor
}


Games/DeathMatch/Worlds/TechDemo.jpg
{
    diffusemap Worlds/TechDemo.jpg, wrapS clampToEdge, wrapT clampToEdge

    meta_editorImage noEditor
}


Games/DeathMatch/Worlds/Test1.jpg
{
    diffusemap Worlds/Test1.jpg, wrapS clampToEdge, wrapT clampToEdge

    meta_editorImage noEditor
}


Games/DeathMatch/Worlds/TestPatches.jpg
{
    diffusemap Worlds/TestPatches.jpg, wrapS clampToEdge, wrapT clampToEdge

    meta_editorImage noEditor
}
